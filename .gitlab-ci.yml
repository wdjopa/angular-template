# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
stages:      # List of stages for jobs, and their order of execution
  - install
  - build
  - deploy

install_dependencies:
  stage: install
  image: node:12-alpine
  tags:
    - docker
  script:
    - npm install @angular/cli
    - npm install
    - apk add zip unzip
    - echo "Compiling the code..."
    - ./node_modules/.bin/ng build --prod
    - echo "Compile complete."
    - ls -al dist
    - ls -al dist/# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
stages:      # List of stages for jobs, and their order of execution
  - install
  - build
  - deploy

install_dependencies:
  stage: install
  image: node:12-alpine
  tags:
    - docker
  script:
    - npm install @angular/cli
    - npm install
    - apk add zip unzip
    - echo "Compiling the code..."
    - ./node_modules/.bin/ng build --prod
    - echo "Compile complete."
    - cp ./.htaccess dist/ecommerce-angular-template/.htaccess
    - ls -al dist
    - ls -al dist/ecommerce-angular-template

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  script:
    - echo "Deploying application..."
    - |
      zip -r ecommerce-angular-template.zip ./dist/ecommerce-angular-template/*
      curl -v -X POST -H "Accept: application/json" -H "Authorization: Bearer 3|rnRyY51ezlIWELsKbwbPfM9i7vVLVFoiEVbRmef1" -F "file=@./ecommerce-angular-template.zip" https://hostme.space/api/websites/genuka_angular/deploy_on_push


deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  script:
    - echo "Deploying application..."
    - |
      zip -r expressapp.zip ./dist/expressapp/*
      curl -v -X POST -H "Accept: application/json" -H "Authorization: Bearer 3|rnRyY51ezlIWELsKbwbPfM9i7vVLVFoiEVbRmef1" -F "file=@./expressapp.zip" https://hostme.space/api/websites/genuka_angular/deploy_on_push
